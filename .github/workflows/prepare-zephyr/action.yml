name: Zephyr Environment Setup (Composite)
description: |
  This workflow prepares the Zephyr environment for building, testing, or other tasks. It is
  intended to be used as a reusable (composite) step in other workflows, and must
  be run within a container that includes the Zephyr SDK installation.

inputs:
  app-path:
    description: 'Path to the Zephyr application to build'
    required: true

runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install west
      shell: bash
      run: |
        pip install west

    - name: Install curl
      shell: bash
      run: |
        if ! command -v curl &> /dev/null ; then
          apt-get update
          apt-get install -y curl
        fi

    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        rustflags: '-A warnings'

    # This step is required because stateful runners (e.g. self-hosted runners) may have
    # a stale copy of the repos in the manifest. This step ensures that all state
    # repos are cleaned out before the manifest is cloned.
    - name: Remove existing data
      shell: bash
      run: |
        if [ -d ".west" ]; then
          echo "Cleaning out old west manifest directories"
          for dir in $(west list -f "{path"}); do
            if [ $dir != ${{ inputs.app-path }} ]; then
              echo "Removing $dir"
              rm -rf $dir
            fi
          done
          rm -rf ".west"
        fi
        if [ -d "zephyr-sdk" ]; then
          echo "Cleaning out old zephyr-sdk directory"
          rm -rf zephyr-sdk
        fi

    - name: Check if Zephyr SDK is installed
      shell: bash
      id: check-sdk
      run: |
        if [ -d "/opt/toolchains" ]; then
          echo "SDK installation found"
          export SDK_SETUP=$(find /opt/toolchains/ -name setup.sh)
          echo "setup-script=$SDK_SETUP" >> "$GITHUB_OUTPUT"
          echo "exists=true" >> "$GITHUB_OUTPUT"
        else
          echo "No SDK installation found"
          echo "exists=false" >> "$GITHUB_OUTPUT"
        fi

    # If zephyr SDK isn't installed, perform the full Zephyr setup step
    - name: Set up Zephyr project (full)
      if: steps.check-sdk.outputs.exists == 'false'
      uses: zephyrproject-rtos/action-zephyr-setup@v1
      with:
        app-path: ${{ inputs.app-path }}
        toolchains: arm-zephyr-eabi:riscv64-zephyr-elf:x86_64-zephyr-elf:arc-zephyr-elf

    # Otherwise, all we actually need is to run west init and pip install
    - name: Set up Zephyr project (basic)
      if: steps.check-sdk.outputs.exists == 'true'
      shell: bash
      run: |
        # Register SDK cmake package
        ${{ steps.check-sdk.outputs.setup-script }} -c
        pip3 install -U pip wheel
        pip3 install west
        west init -l ${{ inputs.app-path }}
        west update -o=--depth=1 -n
        west packages pip --install --ignore-venv-check || pip3 install -r zephyr/scripts/requirements.txt

    - name: Install app python dependencies
      shell: bash
      run: |
        pip install -r ${{ inputs.app-path }}/scripts/requirements.txt

    - name: Verify binary blobs
      shell: bash
      run: |
        west blobs fetch

    - name: Apply patches
      shell: bash
      run: |
        west -v patch apply
