/*
 * Copyright (c) 2024 Tenstorrent AI ULC
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;

#include <arc/tenstorrent/tt_blackhole_smc.dtsi>
#include "tt_blackhole_smc-pinctrl.dtsi"

#include <freq.h>
#include <mem.h>

/ {
	model = "Tenstorrent Blackhole board";
	compatible = "tenstorrent,blackhole";

	chosen {
		zephyr,sram = &csm;
		zephyr,console = &uart0;
		zephyr,shell-uart = &uart0;
		/* Not used for setting flash base address, but required by mcuboot */
		zephyr,flash = &spi_flash;
		zephyr,flash-controller = &spi_flash;
		zephyr,bootloader-info = &boot_info0;
	};

};

/* use end of CSM as retained memory, we don't need it for anything else */
&csm_end {
	retainedmem {
		compatible = "zephyr,retained-ram";
			status = "okay";
			#address-cells = <1>;
			#size-cells = <1>;

		boot_info0: boot_info@0 {
			compatible = "zephyr,retention";
			status = "okay";
			reg = <0x0 0x100>;
		};
	};
};

&spi0 {
	status = "okay";

	spi_flash: eeprom@0 {
		compatible = "jedec,mspi-nor";
		reg = <0>;
		status = "okay";
		/* Programming has experimentally been reliable up to 17 MHz, use 15 to be safe */
		mspi-max-frequency = <DT_FREQ_M(15)>;
		mspi-io-mode = "MSPI_IO_MODE_SINGLE";
		mspi-endian = "MSPI_BIG_ENDIAN";
		quad-enable-requirements = "NONE";
		write-block-size = <1>;
		erase-block-size = <4096>;

		partitions {
			compatible = "fixed-partitions";
			#address-cells = <1>;
			#size-cells = <1>;

			/*
			 * MCUBoot partition- will be loaded by bootrom.
			 * tagged as CMFW in tt-boot-fs
			 */
			boot_partition: partition@0 {
				label = "mcuboot";
				reg = <0x0 DT_SIZE_K(128)>;
			};

			/*
			 * This partition is used for the primary firmware image.
			 * it is loaded by MCUBoot, and does not have a tag in tt-boot-fs.
			 */
			slot0_partition: partition@20000 {
				label = "image-0";
				reg = <0x20000 DT_SIZE_K(512)>;
			};

			/*
			 * The data partition is used for storing additional
			 * tt-boot-fs entries, such as the DMFW image
			 * and coprocessor firmware images.
			 * The partition is not accessed directly, but
			 * rather is read via the tt-boot-fs APIs
			 */
			data_partition: partition@a0000 {
				label = "data";
				reg = <0xa0000 DT_SIZE_M(1)>;
			};

			/*
			 * This partition contains the recovery image. It will be
			 * loaded by MCUBoot if the primary image fails to validate,
			 * and is also tagged as the recovery image in tt-boot-fs.
			 * Therefore, either the bootrom or MCUBoot can load this image.
			 */
			slot1_partition: partition@1a0000 {
				label = "image-1";
				reg = <0x1a0000 DT_SIZE_K(512)>;
			};
		};
	};
};

&i2c0 {
	status = "okay";
};

&i2c1 {
	status = "disabled";

	regulator0: max20816@64 {
		compatible = "maxim,max20816";
		reg = <0x64>;
		status = "disabled";
	};

	regulator1: max20816@65 {
		compatible = "maxim,max20816";
		reg = <0x65>;
		status = "disabled";
	};

	regulator2: mpm3695@33 {
		compatible = "mps,mpm3695";
		reg = <0x33>;
		status = "disabled";
	};

	regulator3: max20730@54 {
		compatible = "maxim,max20730";
		reg = <0x54>;
		status = "disabled";
	};

	regulator4: max20730@55 {
		compatible = "maxim,max20730";
		reg = <0x55>;
		status = "disabled";
	};

	regulator5: max20730@56 {
		compatible = "maxim,max20730";
		reg = <0x56>;
		status = "disabled";
	};

	regulator6: max20730@57 {
		compatible = "maxim,max20730";
		reg = <0x57>;
		status = "disabled";
	};
};

&i2c2 {
	status = "disabled";

	fanctl0: max6639@58 {
		compatible = "maxim,max6639";
		reg = <0x58>;
		status = "disabled";
	};

	sw0: switch@72 {
		compatible = "ti,tps22993";
		reg = <0x72>;
		status = "disabled";
	};

	sw1: switch@73 {
		compatible = "ti,tps22993";
		reg = <0x73>;
		status = "disabled";
	};
};
